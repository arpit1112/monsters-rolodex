{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","FilteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,mCAAOL,EAAMG,QAAQG,KAArB,OACA,kCAAMN,EAAMG,QAAQI,MAApB,WCLCC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCHlBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsDCG,E,kDAzDd,aAAe,IAAD,8BACb,gBAaDH,aAAe,SAACI,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO3C,WACC,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC/CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAEjD,OACC,sBAAK9B,UAAU,MAAf,UACC,iDACA,cAAC,EAAD,CACCW,YAAc,iBACdC,aAAgBe,KAAKf,eAEtB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA/BNI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.717efb8e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return  (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`} alt=\"monster\"/>\r\n            <h2> { props.monster.name } </h2>\r\n            <p> { props.monster.email } </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'> \r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n); ","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange}) => (\r\n    <input \r\n    className = 'search'\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange} \r\n    />\r\n)","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({ monsters: users }))\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchField: e.target.value });\n\t}\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst FilteredMonsters = monsters.filter(monster => \n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\t\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monster Rolodex</h1>\n\t\t\t\t<SearchBox \n\t\t\t\t\tplaceholder = 'Search Monster'\n\t\t\t\t\thandleChange = {this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={FilteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Hello, Welcome to React App.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}